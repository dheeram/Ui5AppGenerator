#00breakDialogTypes var oDialogTypes = {
        //##04placeholderNewDialogType
    } ##00breakDialogTypes

##01breakDialogInit _initDialog: function (sType) {
        return new Promise(function (resolve, reject) {
            var baseDlg = {
                binding: null,
                window: null,
                open: function () {
                    this.window.open();
                },
                close: function () {
                    this.window.close();
                },
                init: function (cDlg, sFragment) {
                    return new Promise(function (resolve, reject) {
                        //Fragment.load({
                        //    name: "myApps.{{ProjectName}}.view." + sFragment,
                        //    controller: that
                        //}).then(function (oDialog) {
                        //    cDlg.binding = that.getView().addDependent(oDialog);
                        //    cDlg.window = oDialog;
                        //    resolve(cDlg);
                        //});
                        cDlg.window = new sap.ui.xmlfragment("",  "myApps.{{ProjectName}}.view." + sFragment, that);
                        // über das Binding Models anhängen
                        cDlg.binding = that.getView().addDependent(cDlg.window);
                        resolve(cDlg);
                    });
                },
                bind: function (oModel, sModelName) {
                    this.binding.setModel(oModel, sModelName);
                    this.binding.bindElement({
                        path: "/",
                        model: sModelName
                    });
                    this.window.open();
                }
            };
            switch (sType) {
                //##06placeholderDialogSwitch
                default:
                    break;
            }
        });
    },
    _EventReader: function(sId) {
        var aDlgIds = [ //##02placeholderEventReaderDlgs 
        ];
        for (var m = 0; m < aDlgIds.length; m++) {
            if (sId.includes(aDlgIds[m].id)) {
                return aDlgIds[m];
            }
        }
    },##01breakDialogInit

##02breakEventReaderDlgs {
            id: "bOpen{{DialogName}}",
            dlg: o{{DialogName}},
            searchType: null,
            type: "{{DialogName}}"
        }, //##02placeholderEventReaderDlgs ##02breakEventReaderDlgs

##03breakDialogOpen onOpenDlg: function (sType) {
        var sId = oEvent.getSource().getId();
        var oDlgInfos = that._EventReader(sId);
        sId = oDlgInfos.id;
        var cDlg = oDlgInfos.dlg;
        if (!cDlg) {
            Promise.all([that._initDialog(oDlgInfos.type)]).then(function (responses) {
                cDlg = responses[0];
                cDlg.open();
            });
            return;
        } else {
            cDlg.open();
        }
    },##03breakDialogOpen

##04breakNewDialogType {{DialogName}}: "{{DialogName}}",
    //##04placeholderNewDialogType ##04breakNewDialogType
    
##05breakDialogVar var o{{DialogName}} = undefined;
    //##05placeholderDialogVar ##05breakDialogVar

##06breakDialogSwitch case oDialogTypes.{{DialogName}}:
    o{{DialogName}} = baseDlg;
    Promise.all([o{{DialogName}}.init(o{{DialogName}}, "{{DialogName}}")]).then(function () {
        o{{DialogName}}.bind(that._getModel(), "{{DialogName}}");
    });
    resolve(o{{DialogName}});
    return o{{DialogName}};
    //##06placeholderDialogSwitch ##06breakDialogSwitch

##07breakSwitchDialogOpen case oDialogTypes.{{DialogName}}:
    cDlg = o{{DialogName}};
    break;
    //##07placeholderSwitchOpenDialog ##07breakSwitchDialogOpen

